var fs = require('fs'),
	path = require('path');

function Pluginify(path, config){
	this.p = path || "./";
	this.c = config || {};
	this.plugins = {};
}

Pluginify.prototype.selectPlugin = function(name){
	return true;
};

Pluginify.prototype.loadAll = function(){
	fs.readdir(this.p, this._readdir.bind(this));
};

Pluginify.prototype._readdir = function(err, files){
	if(err)
		return;
	for(var i=0,file; file=files[i];i++){
		fs.stat(path.join(this.p, file), this._stat(file));
	}
};

Pluginify.prototype._stat = function(file){
	return (function(err, stat){
		if(err)
			return;

		if(stat.isDirectory() && this.selectPlugin(file))
			this.load(file);

	}).bind(this);
};

Pluginify.prototype.load = function(folder){
	try {
		var plugin = require(path.join(this.p, folder, folder+".js"));
		this.plugins[folder] = new plugin();
		this.plugins[folder].__base = plugin;
		this.plugins[folder].run();
	}catch(e){
		console.log(e);
	}
};

Pluginify.prototype.sendMessage = function(name, event, data, cb){
	var plugin = this.plugins[name];
	if(plugin)
		plugin.sendMessage(event, data, cb);
	else
		cb(1, {
			error: -1,
			error_message: "No existe el plugin"
		});
};

module.exports = Pluginify;
